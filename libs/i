
importList = nil
-- Imports all files in an array
-- Params:
--   importPaths - Array of files to import (string)
-- Returns:
--   Prints messages for all import errors

printLoadedAPIs = nil
-- Prints out the list of APIs currently loaded

if (not _G.loadedAPIs) then
  _G.loadedAPIs = {}
end

local printImportErrors = false

importList = function(importPaths)
  if ((not importPaths) or (#importPaths == 0)) then
    return
  end
  
  for _, filepath in pairs(importPaths) do
    
    --print("Loading: " .. filepath)
    --printLoadedAPIs()
    
    if (not fs.exists("/libs/" .. filepath)) then
      print("File: 'libs/" .. filepath .. "' doesn't exist")
    elseif (_G.loadedAPIs[filepath]) then
      if (printImportErrors) then
        print("API: 'libs/" .. filepath .. "' already loaded")
      end
    else
      _G.loadedAPIs[filepath] = true
      --printLoadedAPIs()
      if (not os.loadAPI("/libs/" .. filepath)) then
        print("API: 'libs/" .. filepath .. "' could not be loaded")
        _G.loadedAPIs[filepath] = false
      end
    end
    --sleep(5)
  end
end

printLoadedAPIs = function()
  print("Loaded APIs:")
  for name, value in pairs(_G.loadedAPIs) do
    print("  " .. name .. " = " .. tostring(value))
  end
end
